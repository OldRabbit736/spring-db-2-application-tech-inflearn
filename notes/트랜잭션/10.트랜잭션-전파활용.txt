java.hello.springtx.propagation 패키지에서 코드 만들어 실습 진행
- 테스트 코드(MemberServiceTest)와 자료("11. 스프링 트랜잭션 전파2-활용.pdf")를 보면서 이해하면 된다.
- 트랜잭션 AOP도 내부에서는 트랜잭션 매니저를 사용한다.
- 스프링 @Transactional 의 전파 기본 옵션은 "REQUIRED" 이다.
    - 즉 기존 트래잭션이 없다면 트랜잭션을 생성하고, 있다면 기존 트랜잭션에 참여한다.
    - 참여한다는 것은 같은 물리 트랜잭션(트랜잭션 동기화 매니저에 저장되어 있는 트랜잭션 걸린 커넥션)을 사용한다는 것이다.
    - 트랜잭션 내부 각각을 논리 트랜잭션, 전체를 묶은 트랜잭션을 물리 트랜잭션이라고 한다.
    - 물리 트랜잭션을 시작한 처음 논리 트랜잭션을 외부 트랜잭션, 참여한 나머지 논리 트랜잭션을 내부 트랜잭션이라고 한다.
- 트랜잭션을 분리할 곳을 분리하면 해당 오퍼레이션에서 실패가 일어나도 나머지 트랜잭션은 정상적으로 동작하게 할 수 있다.
    - REQUIRES_NEW 로 분리 가능
    - 하지만 이 방법은 물리 커넥션을 늘리게 되므로 성능에 영향을 미치는 부분은 없는지 검토하고 적용하여야 한다.
      (동시에 걸리는 커넥션이 늘어나므로 빠르게 커넥션 풀이 말라간다.)
    - 이런 이유 때문에 REQUIRES_NEW 말고 다른 방법으로 풀 수가 있다면 그 방법을 택하는 것이 좋을 수 있다.
        - "11. 스프링 트랜잭션 전파2-활용.pdf" 30 페이지 참조.
