스프링 트랜잭션 전파


트랜잭션 각자 사용 시
- BasicTxTest.java 파일 참조


트랜잭션이 이미 진행 중일 때 추가로 트랜잭션 수행 시
- 트랜잭션을 각각 사용하는 것이 아니라, 트랜잭션이 이미 진행중인데 여기에 추가로 트랜잭션을 수행하면 어떻게 될까?
- 기존 트랜잭션과 별도의 트랜잭션을 진행해야 할까? 아니면 기존 트랜잭션을 이어 받아서 수행해야 할까?
- 이런 행위를 트랜잭션 전파(propagation)라고 한다.
- 스프링은 다양한 트랜잭션 전파 옵션을 제공한다.


* 외부 트랜잭션이 수행 중인데, 내부 트랜잭션이 추가로 수행됨
- 외부 트랜잭션은 처음 시작된 트랜잭션이고 내부 트랜잭션은 첫번째 시작된 트랜잭션이 호출한 트랜잭션이다.
    클라이언트 --> 외부 트랜잭션(로직1) --> 내부 트랜잭션(로직2)
- 스프링은 이런 경우 두 트랜잭션을 하나로 묶어준다. 내부 트랜잭션이 외부 트랜잭션에 참여하는 것이다. 이것이 기본 동작이고 옵션을 통해 다른 동작을 선택할 수 있다.
    클라이언트 --> 하나의 트랜잭션(외부 트랜잭션(로직1) --> 내부 트랜잭션(로직2))


* 물리 트래잭션, 논리 트랜잭션
- 스프링은 이해를 돕기 위해 논리 트랜잭션과 물리 트랜잭션이라는 개념을 설명한다.
- 논래 트랜잭션들은 하나의 물리 트랜잭션으로 묶인다.
- 물리 트랜잭션은 우리가 이해하는 실제 데이터베이스에 적용되는 트랜잭션을 뜻한다.
  실제 커넥션을 통해서 트랜잭션을 시작(setAutoCommit(false))하고 커밋, 롤백하는 단위이다.
- 논리 트랜잭션은 트랜잭션 매니저를 통해 트랜잭션을 사용하는 단위이다.
- 이러한 논리 트랜잭션 개념은 트랜잭션이 진행되는 중에 내부에 추가로 트랜잭션을 사용하는 경우에 나타난다.
  트랜잭션이 하나인 경우에는 물리, 논리 트랜잭션을 구분하지 않는다. (더 정확히는 REQUIRED 전파 옵션을 사용하는 경우에 둘을 구분)

* 그럼 왜 이렇게 논리 트랜잭션과 물리 트랜잭션을 나누어 설명하나?
- 트랜잭션이 또 다른 트랜잭션을 호출하게 되면 여러가지 복잡한 상황이 발생할 수 있다. 논리 트랜잭션 개념을 통해 다음과 같은 단순한 원칙을 만들 수 있다.
- 원칙
    - 모든 논리 트랜잭션이 커밋되어야 물리 트랜잭션이 커밋된다.
    - 하나의 논리 트랜잭션이라도 롤백되면 물리 트랜잭션은 롤백된다.
    - 다른 말로, 모든 트랜잭션 매니저가 커밋해야 물리 트랜잭션이 커밋된다. 하나의 트랜잭션 매니저라도 롤백하면 물리 트랜잭션은 롤백된다.

